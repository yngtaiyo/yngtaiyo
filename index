<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>YNG TAIYO</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
      font-family: 'Arial', sans-serif;
      scroll-behavior: smooth;
      background-color: black;
      color: white;
    }

    .intro {
      height: 100vh;
      background: url('websitebackground.gif') center center / cover no-repeat;
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }

    .intro img {
      max-width: 300px;
      height: auto;
    }

    .nav {
      position: absolute;
      top: 20px;
      right: 40px;
      display: flex;
      gap: 20px;
    }

    .nav a {
      color: white;
      text-decoration: none;
      font-weight: bold;
      background: rgba(0, 0, 0, 0.4);
      padding: 8px 16px;
      border-radius: 5px;
      transition: background 0.3s;
    }

    .nav a:hover {
      background: rgba(255, 255, 255, 0.2);
    }

    .main-content {
      padding: 4rem 2rem;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background: #111;
    }

    th, td {
      padding: 12px;
      border: 1px solid #444;
    }

    th {
      background: #222;
    }

    audio {
      width: 100%;
    }

    canvas {
      width: 100%;
      height: 50px;
      background: #000;
    }
  </style>
</head>
<body>

  <!-- Intro Logo Section -->
  <div class="intro">
    <div class="nav">
      <a href="#beats">Beats</a>
      <a href="#contact">Contact</a>
      <a href="#cart">Cart</a>
    </div>
    <img src="3dgifmaker26321.gif" alt="YNG TAIYO Logo">
  </div>

  <!-- Main Content -->
  <div id="beats" class="main-content">
    <h1>Available Beats</h1>
    <table id="beatsTable">
      <thead>
        <tr>
          <th>Title</th>
          <th>Player</th>
          <th>Waveform</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <!-- Contact & Cart Sections -->
  <div id="contact" class="main-content">
    <h2>Contact</h2>
    <p>Email: your@email.com</p>
  </div>

  <div id="cart" class="main-content">
    <h2>Cart</h2>
    <p>Your cart is empty.</p>
  </div>

  <script>
    // Dynamically load MP3 files from current directory
    fetch(window.location.href)
      .then(response => response.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, "text/html");
        const links = Array.from(doc.links);
        const mp3s = links
          .filter(link => link.href.endsWith(".mp3"))
          .map(link => link.href.split("/").pop());

        const tbody = document.querySelector("#beatsTable tbody");

        mp3s.forEach(mp3 => {
          const title = mp3.replace(".mp3", "").replace(/[_-]/g, " ");

          const tr = document.createElement("tr");
          const titleCell = document.createElement("td");
          titleCell.textContent = title;

          const audioCell = document.createElement("td");
          const audio = document.createElement("audio");
          audio.controls = true;
          audio.src = mp3;

          const waveformCell = document.createElement("td");
          const canvas = document.createElement("canvas");

          audio.addEventListener("play", () => drawWaveform(audio, canvas));
          audioCell.appendChild(audio);
          waveformCell.appendChild(canvas);

          tr.appendChild(titleCell);
          tr.appendChild(audioCell);
          tr.appendChild(waveformCell);
          tbody.appendChild(tr);
        });
      });

    // Basic waveform visualizer using Web Audio API
    function drawWaveform(audio, canvas) {
      const ctx = canvas.getContext("2d");
      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();
      const src = audioCtx.createMediaElementSource(audio);
      const analyser = audioCtx.createAnalyser();
      analyser.fftSize = 256;

      src.connect(analyser);
      analyser.connect(audioCtx.destination);

      const bufferLength = analyser.frequencyBinCount;
      const dataArray = new Uint8Array(bufferLength);

      canvas.width = canvas.offsetWidth;
      canvas.height = canvas.offsetHeight;

      function draw() {
        requestAnimationFrame(draw);

        analyser.getByteFrequencyData(dataArray);
        ctx.fillStyle = "#000";
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        const barWidth = (canvas.width / bufferLength) * 1.5;
        let x = 0;

        for (let i = 0; i < bufferLength; i++) {
          const barHeight = dataArray[i] / 2;
          ctx.fillStyle = `rgb(${barHeight + 100},50,50)`;
          ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);
          x += barWidth + 1;
        }
      }

      draw();
    }
  </script>

</body>
</html>
